# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply prepend
# them with $. For strings the variable must be within quotes (ie, "$STR_VAR"),
# for numbers and booleans they should be plain (ie, $INT_VAR, $BOOL_VAR)


# Global tags can be specified here in key="value" format.
[global_tags]
{% if telegraf_tags is defined and telegraf_tags != None %}
{% for key, value in telegraf_tags.iteritems() %}
   {{ key }} = "{{ value }}"
{% endfor %}
{% endif %}


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "{{ telegraf_agent_interval }}"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = {{ telegraf_agent_round_interval | default('true') }}

  ## Telegraf will send metrics to outputs in batches of at
  ## most metric_batch_size metrics.
  metric_batch_size = {{ telegraf_agent_metric_batch_size | default('1000') }}
  ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
  ## output, and will flush this buffer on a successful write. Oldest metrics
  ## are dropped first when this buffer fills.
  metric_buffer_limit = {{ telegraf_agent_metric_buffer_limit | default('10000') }}

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "{{ telegraf_agent_collection_jitter | default('0s') }}"

  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "{{ telegraf_agent_flush_interval }}"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "{{ telegraf_agent_flush_jitter | default('0s') }}"

  ## By default, precision will be set to the same timestamp order as the
  ## collection interval, with the maximum being 1s.
  ## Precision will NOT be used for service inputs, such as logparser and statsd.
  ## Valid values are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""
  ## Run telegraf in debug mode
  debug = {{ telegraf_agent_debug | default('false') }}
  ## Run telegraf in quiet mode
  quiet = {{ telegraf_agent_quiet | default('false') }}
  ## Override default hostname, if empty use os.Hostname()
  hostname = "{{ telegraf_agent_hostname }}"
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = {{ telegraf_agent_omit_hostname | default('false') }}


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

{% if telegraf_outputs is defined and telegraf_outputs is iterable %}
{% for item in telegraf_outputs %}
[[outputs.{{ item.plugin }}]]
{% for items in item.config %}
  {{ items }}
{% endfor %}
{% endfor %}
{% endif %}


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

{% if telegraf_inputs_default is defined and telegraf_inputs_default is iterable %}
{% for item in telegraf_inputs_default %}
[[inputs.{{ item.plugin }}]]
{% if item.config is defined and item.config is iterable %}
{% for items in item.config %}
  {{ items }}
{% endfor %}
{% endif %}
{% if item.tagpass is defined and item.tagpass is iterable %}
[{{ item.plugin }}.tagpass]
{% for items in item.tagpass %}
    {{ items }}
{% endfor %}
{% endif %}
{% if item.tagdrop is defined and item.tagdrop is iterable %}
[{{ item.plugin }}.tagdrop]
{% for items in item.tagdrop %}
    {{ items }}
{% endfor %}
{% endif %}
{% if item.fieldpass is defined and item.fieldpass is iterable %}
[{{ item.plugin }}.fieldpass]
{% for items in item.fieldpass %}
    {{ items }}
{% endfor %}
{% endif %}
{% if item.fielddrop is defined and item.fielddrop is iterable %}
[{{ item.plugin }}.fielddrop]
{% for items in item.fielddrop %}
    {{ items }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
